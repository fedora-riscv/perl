--- perl-5.8.0/utils/perlbug.PL.perlbug	2004-10-05 12:07:54.423998839 -0400
+++ perl-5.8.0/utils/perlbug.PL	2004-10-05 12:08:37.607393368 -0400
@@ -27,8 +27,6 @@
 open PATCH_LEVEL, "<" . catfile(updir, "patchlevel.h")
     or die "Can't open patchlevel.h: $!";
 
-my $patchlevel_date = (stat PATCH_LEVEL)[9];
-
 while (<PATCH_LEVEL>) {
     last if $_ =~ /^\s*static\s+char.*?local_patches\[\]\s*=\s*{\s*$/;
 }
@@ -64,9 +62,8 @@
     eval 'exec $Config{perlpath} -S \$0 \${1+"\$@"}'
 	if \$running_under_some_shell;
 
-my \$config_tag1 = '$extract_version - $Config{cf_time}';
+my \$config_tag1 = '$extract_version';
 
-my \$patchlevel_date = $patchlevel_date;
 my \$patch_tags = '$patch_tags';
 my \@patches = (
     $patch_desc
@@ -275,17 +272,6 @@
     $ok = 0;
     if ($::opt_o) {
 	if ($::opt_o eq 'k' or $::opt_o eq 'kay') {
-	    my $age = time - $patchlevel_date;
-	    if ($::opt_o eq 'k' and $age > 60 * 24 * 60 * 60 ) {
-		my $date = localtime $patchlevel_date;
-		print <<"EOF";
-"perlbug -ok" and "perlbug -nok" do not report on Perl versions which
-are more than 60 days old.  This Perl version was constructed on
-$date.  If you really want to report this, use
-"perlbug -okay" or "perlbug -nokay".
-EOF
-		exit();
-	    }
 	    # force these options
 	    unless ($::opt_n) {
 		$::opt_S = 1; # don't prompt for send
@@ -592,9 +578,8 @@
     print OUT <<EFF;
 ---
 EFF
-    print OUT "This perlbug was built using Perl $config_tag1\n",
-	    "It is being executed now by  Perl $config_tag2.\n\n"
-	if $config_tag2 ne $config_tag1;
+    print OUT "This perlbug was built using Perl $config_tag1 in the Red Hat build system.\n",
+	    "It is being executed now by Perl $config_tag2.\n\n";
 
     print OUT <<EOF;
 Site configuration information for perl $perl_version:
